---
# tasks file for mysql
- name: ensure packages are installed
  package:
    name: "{{ item }}"
    state: present
  register: mysql_install_packages
  with_items: "{{ mysql_packages }}"
  tags: [mysql]

- name: ensure my.cnf is set up
  template:
    src: my.cnf.j2
    dest: "{{ mysql_config_file }}"
    owner: root
    group: root
    mode: 0644
  notify: restart mysql
  tags: [mysql]

- name: ensure error log exists
  command: "touch {{ mysql_log_error }}"
  args:
    creates: "{{ mysql_log_error }}"
    warn: no
  tags: [mysql]

- name: ensure perms on error log file
  file:
    path: "{{ mysql_log_error }}"
    state: file
    owner: mysql
    group: mysql
    mode: 0640
  tags: [mysql]

- name: ensure slow query log exists
  command: "touch {{ mysql_slow_query_log_file }}"
  args:
    creates: "{{ mysql_slow_query_log_file }}"
    warn: no
  tags: [mysql]

- name: ensure perms on slow query log file
  file:
    path: "{{ mysql_slow_query_log_file }}"
    state: file
    owner: mysql
    group: mysql
    mode: 0640
  tags: [mysql]

- name: ensure data directory exists
  file:
    path: "{{ mysql_datadir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0755
    setype: mysqld_db_t
  tags: [mysql]

- name: ensure mysql is started and enabled
  service:
    name: "{{ mysql_daemon }}"
    state: started
    enabled: yes
  tags: [mysql]

- name: ensure root cannot login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false
  tags: [mysql]

- name: Get list of hosts for the root user.
  command: mysql -NBe "SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC"
  register: mysql_root_hosts
  changed_when: false
  check_mode: no
  when: mysql_install_packages | bool or mysql_root_password_update
  tags: [mysql]

- name: Update MySQL root password for localhost root account (< 5.7.x).
  shell: >
    mysql -NBe
    'SET PASSWORD FOR "{{ mysql_root_username }}"@"{{ item }}" = PASSWORD("{{ mysql_root_password }}");'
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"
  when: mysql_install_packages | bool or mysql_root_password_update
  tags: [mysql]

- name: Copy .my.cnf file with root password credentials.
  template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when: mysql_install_packages | bool or mysql_root_password_update
  tags: [mysql]

- name: Get list of hosts for the anonymous user.
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false
  check_mode: no
  tags: [mysql]

- name: Remove anonymous MySQL users.
  mysql_user:
     name: ""
     host: "{{ item }}"
     state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"
  tags: [mysql]

- name: Remove MySQL test database.
  mysql_db:
    name: test
    state: absent
  tags: [mysql]

- name: ensure databases are created
  mysql_db:
    name: "{{ item.name }}"
    collation: "{{ item.collation | default('utf8_general_ci') }}"
    encoding: "{{ item.encoding | default('utf8') }}"
    state: present
  with_items: "{{ mysql_databases }}"
  tags: [mysql]

- name: Ensure MySQL users are present.
  mysql_user:
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv | default('*.*:USAGE') }}"
    state: "{{ item.state | default('present') }}"
    append_privs: "{{ item.append_privs | default('no') }}"
  with_items: "{{ mysql_users }}"
  no_log: true
  tags: [mysql]
